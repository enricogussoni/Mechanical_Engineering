include <stdio.h>

#define r 10  /*righe*/
#define c 10  /*colonne*/
              /*in questo caso matrice quadrata*/
int main ()
{
 int campo[r][c],appoggio[r][c];
 int n,x,y,z,p,q;                        /*Conteggi*/
 int k,intorno=0;  /*k cicli e somma dei "vicini"*/
 int ins1,ins2;/*Utile per termionare inserimento
                         o rilanciare programma*/

                                        /*INTRO*/
printf("CONWAY'S GAME OF LIFE\n")
printf("versione del gioco con matrice %d x %d\n",r,c);
printf("\nInserimento dei valori:"
       "\ninserire le coordinate x,y delle celle vive:\n"
       "(inserire -1,-1 per concludere l'inserimento)");

                     /*Inserimento celle "vive"*/
do{
    scanf("%d;%d",&ins1,&ins2);
    if (ins1!=-1 && ins2!= -1)
			m[ins1][ins2]=1;
		x++;
	} while (x<N || (ins1==-1 && ins2== -1))

	                     /*Stampa campo iniziale*/
for(ins1=0;ins2<N;ins3++)
   {
    for(ins2=0;ins2<N;ins2++)
       {
        printf("%d ", m[i][j]);
       }
		printf ("\n");
	}

/*Inizio computazione*/
printf("Inserire umero di cicli:\n");
scanf("%d",&k);

for(n=0;n<k;n++)
   {
    for(x=1;x<r-1;x++)                 /*Scorri righe matrice r-1,c-1*/
       {
        for(y=1;y<c+1;y++)          /*Scorri colonne matrice r-1,c-1**/
           {                        /*Somma delle caselle dell'intorno di x,y*/
            intorno=intorno+
                    campo[x-1][y-1]+
                    campo[x][y-1]+
                    campo[x+1][y-1]+
                    campo[x-1][y]+
                    campo[x+1][y]+
                    campo[x-1][y+1]+
                    campo[x][y+1]+
                    campo[x+1][y+1];
                                        /*Creazione nuovo campo in "appoggio"*/
            if((campo[x][y]==0)&&(intorno==3))
               appoggio[x][y]=1;
            else
                if((campo[x][y]==1)&&((intorno==2)||(intorno==3))
                   appoggio[x][y]==1;
                else
                   appoggio[x][y]==0;
            }
        }
    }


return 0;
}
